<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>TOML</string>
    <key>file_extensions</key>
    <array>
      <string>toml</string>
    </array>
    <key>scope</key>
    <string>source.toml</string>
    <key>variables</key>
    <dict>
      <key>digits</key>
      <string>(?:(?:-?)\d+(?:_\d+)*)</string>
      <key>identifier</key>
      <string>([[:alpha:]_][[:alnum:]_]*)</string>
    </dict>
    <key>contexts</key>
    <dict>
      <key>prototype</key>
      <array>
        <dict>
          <key>include</key>
          <string>comment</string>
        </dict>
      </array>
      <key>main</key>
      <array>
        <dict>
          <key>include</key>
          <string>statement</string>
        </dict>
        <dict>
          <key>include</key>
          <string>header</string>
        </dict>
      </array>
      <key>string</key>
      <array>
        <dict>
          <key>include</key>
          <string>raw-string-double-quote</string>
        </dict>
        <dict>
          <key>include</key>
          <string>raw-string-single-quote</string>
        </dict>
        <dict>
          <key>include</key>
          <string>string-single-quote</string>
        </dict>
        <dict>
          <key>include</key>
          <string>string-double-quote</string>
        </dict>
      </array>
      <key>value</key>
      <array>
        <dict>
          <key>include</key>
          <string>string</string>
        </dict>
        <dict>
          <key>include</key>
          <string>number</string>
        </dict>
        <dict>
          <key>include</key>
          <string>boolean</string>
        </dict>
        <dict>
          <key>include</key>
          <string>array</string>
        </dict>
        <dict>
          <key>include</key>
          <string>object</string>
        </dict>
      </array>
      <key>statement</key>
      <array>
        <dict>
          <key>match</key>
          <string>{{identifier}}(\s+)?</string>
          <key>scope</key>
          <string>entity.name.variable.toml</string>
          <key>push</key>
          <array>
            <dict>
              <key>match</key>
              <string>=(\s+)?</string>
              <key>scope</key>
              <string>keyword.operator.assignment.toml</string>
            </dict>
            <dict>
              <key>include</key>
              <string>value</string>
            </dict>
            <dict>
              <key>match</key>
              <string>\s+</string>
              <key>pop</key>
              <true/>
            </dict>
          </array>
        </dict>
      </array>
      <key>header</key>
      <array>
        <dict>
          <key>match</key>
          <string>\[</string>
          <key>scope</key>
          <string>entity.name.section.toml</string>
          <key>push</key>
          <array>
            <dict>
              <key>match</key>
              <string>\]</string>
              <key>scope</key>
              <string>entity.name.section.toml</string>
              <key>pop</key>
              <true/>
            </dict>
            <dict>
              <key>include</key>
              <string>key-segment</string>
            </dict>
            <dict>
              <key>include</key>
              <string>string</string>
            </dict>
          </array>
        </dict>
      </array>
      <key>key-segment</key>
      <array>
        <dict>
          <key>match</key>
          <string>[^\s\]]+</string>
          <key>scope</key>
          <string>entity.name.tag.toml</string>
        </dict>
      </array>
      <key>number</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?x:
  \b{{digits}} (?: (\.) {{digits}}?) # slightly inaccurate: will match -10-10
  | (\.) {{digits}}
)</string>
          <key>scope</key>
          <string>meta.number.float.decimal.toml constant.numeric.value.toml</string>
          <key>captures</key>
          <dict>
            <key>1</key>
            <string>punctuation.separator.decimal.toml</string>
            <key>2</key>
            <string>punctuation.separator.decimal.toml</string>
          </dict>
        </dict>
        <dict>
          <key>match</key>
          <string>({{digits}})</string>
          <key>scope</key>
          <string>meta.number.integer.decimal.toml</string>
          <key>captures</key>
          <dict>
            <key>1</key>
            <string>constant.numeric.value.toml</string>
            <key>2</key>
            <string>constant.numeric.suffix.toml</string>
          </dict>
        </dict>
      </array>
      <key>boolean</key>
      <array>
        <dict>
          <key>match</key>
          <string>\b(true|false)\b</string>
          <key>scope</key>
          <string>constant.language.boolean.toml</string>
        </dict>
      </array>
      <key>array</key>
      <array>
        <dict>
          <key>match</key>
          <string>\[</string>
          <key>scope</key>
          <string>punctuation.section.sequence.begin.toml</string>
          <key>push</key>
          <array>
            <dict>
              <key>meta_scope</key>
              <string>meta.sequence.toml</string>
            </dict>
            <dict>
              <key>match</key>
              <string>\]</string>
              <key>scope</key>
              <string>puctuation.section.sequence.end.toml</string>
              <key>pop</key>
              <true/>
            </dict>
            <dict>
              <key>include</key>
              <string>value</string>
            </dict>
            <dict>
              <key>match</key>
              <string>,</string>
              <key>scope</key>
              <string>punctuation.separator.sequence.toml</string>
            </dict>
            <dict>
              <key>match</key>
              <string>[^\s\]]</string>
              <key>scope</key>
              <string>invalid.illegal.expected-sequence-separator.toml</string>
            </dict>
          </array>
        </dict>
      </array>
      <key>identifier</key>
      <array>
        <dict>
          <key>match</key>
          <string>{{identifier}}</string>
        </dict>
      </array>
      <key>object-key</key>
      <array>
        <dict>
          <key>include</key>
          <string>identifier</string>
        </dict>
        <dict>
          <key>include</key>
          <string>string-double-quote</string>
        </dict>
        <dict>
          <key>include</key>
          <string>string-single-quote</string>
        </dict>
      </array>
      <key>object</key>
      <array>
        <dict>
          <key>match</key>
          <string>\{</string>
          <key>scope</key>
          <string>punctuation.section.mapping.begin.toml</string>
          <key>push</key>
          <array>
            <dict>
              <key>meta_scope</key>
              <string>meta.mapping.toml</string>
            </dict>
            <dict>
              <key>match</key>
              <string>\}</string>
              <key>scope</key>
              <string>punctuation.section.mapping.end.toml</string>
              <key>pop</key>
              <true/>
            </dict>
            <dict>
              <key>include</key>
              <string>object-key</string>
            </dict>
            <dict>
              <key>match</key>
              <string>=</string>
              <key>scope</key>
              <string>punctuation.separator.mapping.key-value.toml</string>
              <key>push</key>
              <array>
                <dict>
                  <key>match</key>
                  <string>,|\s?(?=\})</string>
                  <key>scope</key>
                  <string>invalid.illegal.expected-mapping-value.toml</string>
                  <key>pop</key>
                  <true/>
                </dict>
                <dict>
                  <key>match</key>
                  <string>(?=\S)</string>
                  <key>set</key>
                  <array>
                    <dict>
                      <key>clear_scopes</key>
                      <integer>1</integer>
                    </dict>
                    <dict>
                      <key>meta_scope</key>
                      <string>meta.mapping.value.toml</string>
                    </dict>
                    <dict>
                      <key>include</key>
                      <string>value</string>
                    </dict>
                    <dict>
                      <key>match</key>
                      <string/>
                      <key>set</key>
                      <array>
                        <dict>
                          <key>match</key>
                          <string>,</string>
                          <key>scope</key>
                          <string>punctuation.separator.mapping.pair.toml</string>
                          <key>pop</key>
                          <true/>
                        </dict>
                        <dict>
                          <key>match</key>
                          <string>\s*(?=\})</string>
                          <key>pop</key>
                          <true/>
                        </dict>
                        <dict>
                          <key>match</key>
                          <string>\s(?!/[/*])(?=[^\s,])|[^\s,]</string>
                          <key>scope</key>
                          <string>invalid.illegal.expected-mapping-separator.toml</string>
                          <key>pop</key>
                          <true/>
                        </dict>
                      </array>
                    </dict>
                  </array>
                </dict>
              </array>
            </dict>
            <dict>
              <key>match</key>
              <string>[^\s\}]</string>
              <key>scope</key>
              <string>invalid.illegal.expected-mapping-key.toml</string>
            </dict>
          </array>
        </dict>
      </array>
      <key>comment</key>
      <array>
        <dict>
          <key>match</key>
          <string>#</string>
          <key>scope</key>
          <string>punctuation.definition.comment.toml</string>
          <key>push</key>
          <string>pop-line-comment</string>
        </dict>
      </array>
      <key>pop-line-comment</key>
      <array>
        <dict>
          <key>meta_scope</key>
          <string>comment.line.toml</string>
        </dict>
        <dict>
          <key>match</key>
          <string>$\n?</string>
          <key>pop</key>
          <true/>
        </dict>
      </array>
      <key>raw-string-double-quote</key>
      <array>
        <dict>
          <key>match</key>
          <string>"""</string>
          <key>scope</key>
          <string>punctuation.definition.string.raw.being.toml</string>
          <key>push</key>
          <string>inside-raw-string-double-quote</string>
        </dict>
      </array>
      <key>inside-raw-string-double-quote</key>
      <array>
        <dict>
          <key>meta_scope</key>
          <string>string.quoted.double.raw.toml</string>
        </dict>
        <dict>
          <key>meta_include_prototype</key>
          <false/>
        </dict>
        <dict>
          <key>match</key>
          <string>"""</string>
          <key>scope</key>
          <string>puncutation.definition.string.raw.end.toml</string>
          <key>pop</key>
          <true/>
        </dict>
      </array>
      <key>raw-string-single-quote</key>
      <array>
        <dict>
          <key>match</key>
          <string>'''</string>
          <key>scope</key>
          <string>punctuation.definition.string.raw.being.toml</string>
          <key>push</key>
          <string>inside-raw-string-single-quote</string>
        </dict>
      </array>
      <key>inside-raw-string-single-quote</key>
      <array>
        <dict>
          <key>meta_scope</key>
          <string>string.quoted.double.raw.toml</string>
        </dict>
        <dict>
          <key>meta_include_prototype</key>
          <false/>
        </dict>
        <dict>
          <key>match</key>
          <string>'''</string>
          <key>scope</key>
          <string>puncutation.definition.string.raw.end.toml</string>
          <key>pop</key>
          <true/>
        </dict>
      </array>
      <key>string-double-quote</key>
      <array>
        <dict>
          <key>match</key>
          <string>"</string>
          <key>scope</key>
          <string>punctuation.definition.string.begin.toml</string>
          <key>push</key>
          <string>inside-string-double-quote</string>
        </dict>
      </array>
      <key>inside-string-double-quote</key>
      <array>
        <dict>
          <key>meta_scope</key>
          <string>string.quoted.double.toml</string>
        </dict>
        <dict>
          <key>meta_include_prototype</key>
          <false/>
        </dict>
        <dict>
          <key>match</key>
          <string>"</string>
          <key>scope</key>
          <string>punctuation.definition.string.end.toml</string>
          <key>pop</key>
          <true/>
        </dict>
        <dict>
          <key>include</key>
          <string>string-escape-double-quote</string>
        </dict>
        <dict>
          <key>match</key>
          <string>$\n?</string>
          <key>scope</key>
          <string>invalid.illegal.unclosed-string.toml</string>
          <key>pop</key>
          <true/>
        </dict>
      </array>
      <key>string-escape-double-quote</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?x:                # turn on extended mode
  \\                # a literal backslash
  (?:               # ...followed by...
    ["\\/bfnrt]     # one of these characters
  )
)</string>
          <key>scope</key>
          <string>constant.character.escape.toml</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\\.</string>
          <key>scope</key>
          <string>invalid.illegal.unrecognized-string-escape.toml</string>
        </dict>
      </array>
      <key>string-single-quote</key>
      <array>
        <dict>
          <key>match</key>
          <string>'</string>
          <key>scope</key>
          <string>punctuation.definition.string.begin.toml</string>
          <key>push</key>
          <string>inside-string-single-quote</string>
        </dict>
      </array>
      <key>inside-string-single-quote</key>
      <array>
        <dict>
          <key>meta_scope</key>
          <string>string.quoted.single.toml</string>
        </dict>
        <dict>
          <key>meta_include_prototype</key>
          <false/>
        </dict>
        <dict>
          <key>match</key>
          <string>'</string>
          <key>scope</key>
          <string>punctuation.definition.string.end.toml</string>
          <key>pop</key>
          <true/>
        </dict>
        <dict>
          <key>include</key>
          <string>string-escape-single-quote</string>
        </dict>
        <dict>
          <key>match</key>
          <string>$\n?</string>
          <key>scope</key>
          <string>invalid.illegal.unclosed-string.toml</string>
          <key>pop</key>
          <true/>
        </dict>
      </array>
      <key>string-escape-single-quote</key>
      <array>
        <dict>
          <key>match</key>
          <string>(?x:                # turn on extended mode
  \\                # a literal backslash
  (?:               # ...followed by...
    ['\\/bfnrt]     # one of these characters
  )
)</string>
          <key>scope</key>
          <string>constant.character.escape.toml</string>
        </dict>
        <dict>
          <key>match</key>
          <string>\\.</string>
          <key>scope</key>
          <string>invalid.illegal.unrecognized-string-escape.toml</string>
        </dict>
      </array>
    </dict>
  </dict>
</plist>